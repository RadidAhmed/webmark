[{"C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\index.js":"1","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\reportWebVitals.js":"2","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\App.js":"3","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\SignIn.js":"4","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\SignUp.js":"5","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\FirebaseAuth.js":"6","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\UserWindow.js":"7"},{"size":459,"mtime":1611913766723,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1851,"mtime":1611987779124,"results":"11","hashOfConfig":"9"},{"size":6245,"mtime":1611979649053,"results":"12","hashOfConfig":"9"},{"size":7367,"mtime":1611927142714,"results":"13","hashOfConfig":"9"},{"size":975,"mtime":1611991151434,"results":"14","hashOfConfig":"9"},{"size":5415,"mtime":1611989280994,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1wdqpyk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\index.js",[],["36","37"],"C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\reportWebVitals.js",[],"C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\App.js",["38","39"],"import \"./App.css\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport React from \"react\";\nimport UserWindow from \"./UserWindow\"\nimport auth from \"./FirebaseAuth.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n         <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/SignIn\">SignIn</Link>\n            </li>\n          </ul>\n        </nav>\n \n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/userWindow\">\n            <UserWindow />\n          </Route>\n          <Route exact path=\"/SignIn\">\n            <SignIn />\n          </Route>\n          <Route exact path=\"/SignUp\">\n            <SignUp />\n          </Route>\n          <Route path=\"/\">\n          <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  let history = useHistory();\n  auth.auth().onAuthStateChanged((user) => {\n    if (user) {\n      history.push(\"/userWindow\");\n      var uid = user.uid;\n      console.log(\"ID IS \", uid);\n      // ...\n    } else {\n      // User is signed out\n      // ...\n    }\n  });\n  return <h1> Home </h1>;\n}\n\nfunction About() {\n  var user = auth.auth().currentUser;\n  console.log(user);\n  if (user)\n    return <h2>The user { user.displayName} has signed up to the service</h2>;\n  else return <h2>About</h2>;\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\SignIn.js",["40","41","42","43","44"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useState } from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { MemoryRouter as Router } from \"react-router\";\r\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"firebase/auth\";\r\nimport auth from \"./FirebaseAuth.js\";\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(6, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn(props) {\r\n  const [open, setOpen] = useState(false);\r\n  \r\n\r\n let history = useHistory()\r\n  auth.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      history.push(\"/userWindow\");\r\n      var uid = user.uid;\r\n      console.log(\"ID IS \", uid);\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      // ...\r\n    }\r\n  });\r\n  \r\n  \r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const logIn = (email, password) => {\r\n    auth\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((userCredential) => {\r\n      // Signed in\r\n      var user = userCredential.user;\r\n      console.log(`User ${user} signed in sucessfully`);\r\n      // ...\r\n    })\r\n    .catch((error) => {\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n\r\n    });\r\n};\r\n\r\n  const classes = useStyles();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"radid.ahmed06@gmail.com\",\r\n      password: \"123456\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n      logIn(values.email, values.password);\r\n    },\r\n  });\r\n  const test = () => {\r\n    console.log(\"its working\");\r\n    //history.push(\"/\");\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.email && Boolean(formik.errors.email)}\r\n            helperText={formik.touched.email && formik.errors.email}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            error={formik.touched.password && Boolean(formik.errors.password)}\r\n            helperText={formik.touched.password && formik.errors.password}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"/about\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/SignUp\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                Bad login\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n          \r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\SignUp.js",["45","46","47"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { MemoryRouter as Router } from \"react-router\";\r\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport \"firebase/auth\";\r\nimport auth from \"./FirebaseAuth.js\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(6, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n  username: yup\r\n    .string(\"Enter your User Name\")\r\n    .min(4, \"User Name should be of minimum 4 characters length\")\r\n    .required(\"A User Name is required\")\r\n    .matches(\r\n      /(^[a-zA-Z0-9]+$)/,\r\n      \"user name can only have characters and/or numbers\"\r\n    ),\r\n});\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n  const signUp = (username, email, password) => {\r\n    auth\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        var user = userCredential.user;\r\n        user\r\n          .updateProfile({\r\n            displayName: username,\r\n          })\r\n          .then(() => history.push('/UserWindow'))\r\n          .catch((e) => {\r\n            console.log(\"the Error was \", e);\r\n          });\r\n        history.push('/About');\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode);\r\n        if (errorCode === \"auth/email-already-in-use\") {\r\n          setOpen(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      //alert(JSON.stringify(values, null, 2));\r\n      try {\r\n        signUp(values.username, values.email, values.password);\r\n      } catch (e) { \r\n        console.log(e);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={formik.handleSubmit}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                name=\"username\"\r\n                value={formik.values.username}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.username && Boolean(formik.errors.username)\r\n                }\r\n                helperText={formik.touched.username && formik.errors.username}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.email && Boolean(formik.errors.email)}\r\n                helperText={formik.touched.email && formik.errors.email}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                value={formik.values.password}\r\n                onChange={formik.handleChange}\r\n                error={\r\n                  formik.touched.password && Boolean(formik.errors.password)\r\n                }\r\n                helperText={formik.touched.password && formik.errors.password}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/SignIn\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"error\">\r\n                An account already exists with this email.\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\FirebaseAuth.js",[],"C:\\Users\\radid\\Desktop\\New folder\\webmark\\client\\src\\UserWindow.js",["48","49","50","51"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useState } from \"react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport auth from \"./FirebaseAuth.js\";\r\nimport { useHistory, Link as RouterLink } from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst style = {\r\n  height: 200,\r\n  width: 200,\r\n  border: \"1px solid green\",\r\n  margin: 6,\r\n  padding: 8,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  con: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr 1fr 1fr\",\r\n    gridTemplateRows: \"auto\",\r\n\r\n  },\r\n\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: theme.spacing(1, 1, 1, 1),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {},\r\n\r\n  signout: {\r\n    padding: theme.spacing(0, 1, 0, 2),\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 30,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"70vw\",\r\n      \"&:focus\": {\r\n        width: \"80vw\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  let history = useHistory();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [items, setItems] = useState(Array.from({ length: 5 }));\r\n\r\n  //Check if logged in\r\n  auth.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      var uid = user.uid;\r\n      console.log(\"ID IS \", uid);\r\n      // ...\r\n    } else {\r\n      // User is signed out\r\n      history.push(\"/Home\");\r\n    }\r\n  });\r\n\r\n  //import styles\r\n  const classes = useStyles();\r\n\r\n\r\n//signout function\r\n  const signOut = () => {\r\n    auth\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        console.log(\"signed out\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"something went wrong with signout!\");\r\n      });\r\n  };\r\n\r\n  //fectching\r\n  let fetchMoreData = () => {\r\n    if (items.length >= 500) {\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n    // a fake async api call like which sends\r\n    // 20 more records in .5 secs\r\n    console.log(\"iteams are\", items.length);\r\n    setTimeout(() => {\r\n      console.log(\"iteams are\", items.length);\r\n      setItems(items.concat(Array.from({ length: 20 })));\r\n      console.log(\"iteams are\", items.length);\r\n    }, 500);\r\n  };\r\n\r\n  let addData = () => { \r\n    setItems(Array.from(\"a\").concat(items));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar className={classes.container}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            WebMark\r\n          </Typography>\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              onClick={addData}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <Link\r\n            href=\"/\"\r\n            color=\"inherit\"\r\n            onClick={signOut}\r\n            className={classes.signout}\r\n          >\r\n            <Typography className={classes.title}>SingOut</Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <InfiniteScroll\r\n        className={classes.con}\r\n        dataLength={items.length} //This is important field to render the next data\r\n        next={fetchMoreData}\r\n        hasMore={hasMore}\r\n        loader={<h4>Loading...</h4>}\r\n        endMessage={\r\n          <p style={{ textAlign: \"center\" }}>\r\n            <b>Yay! You have seen it all</b>\r\n          </p>\r\n        }\r\n      >\r\n        {items.map((i, index) => {\r\n          if (i) {\r\n            return (\r\n              <div style={style} key={index}>\r\n                div - #{i}\r\n              </div>\r\n            )\r\n          } else { \r\n            return (\r\n              <div style={style} key={index}>\r\n                div - #{index}\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n}\r\n",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":8,"column":30,"nodeType":"60","messageId":"61","endLine":8,"endColumn":40},{"ruleId":"58","severity":1,"message":"62","line":76,"column":10,"nodeType":"60","messageId":"61","endLine":76,"endColumn":15},{"ruleId":"58","severity":1,"message":"63","line":18,"column":26,"nodeType":"60","messageId":"61","endLine":18,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":19,"column":30,"nodeType":"60","messageId":"61","endLine":19,"endColumn":40},{"ruleId":"58","severity":1,"message":"64","line":109,"column":11,"nodeType":"60","messageId":"61","endLine":109,"endColumn":20},{"ruleId":"58","severity":1,"message":"65","line":110,"column":11,"nodeType":"60","messageId":"61","endLine":110,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":127,"column":9,"nodeType":"60","messageId":"61","endLine":127,"endColumn":13},{"ruleId":"58","severity":1,"message":"63","line":18,"column":26,"nodeType":"60","messageId":"61","endLine":18,"endColumn":32},{"ruleId":"58","severity":1,"message":"59","line":19,"column":30,"nodeType":"60","messageId":"61","endLine":19,"endColumn":40},{"ruleId":"58","severity":1,"message":"65","line":104,"column":13,"nodeType":"60","messageId":"61","endLine":104,"endColumn":25},{"ruleId":"58","severity":1,"message":"67","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"68","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":16},{"ruleId":"58","severity":1,"message":"69","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":14,"column":30,"nodeType":"60","messageId":"61","endLine":14,"endColumn":40},{"ruleId":"54","replacedBy":"70"},{"ruleId":"56","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'RouterLink' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'Router' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'test' is assigned a value but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Button' is defined but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]